<!DOCTYPE html>
<html>
<head>
    <title> Homepage </title>
    <link rel="stylesheet" href="CSS/siteStyle.css">
	<script src="https://code.jquery.com/jquery-3.4.1.min.js" type="text/javascript"></script>
	<link rel="stylesheet" type="text/css" href="/css/homepage.css">
	<script type="text/javascript" src="/js/homepage.js"></script>
	<script type="text/javascript" src="/js/hp.js"></script>
</head>
<body>
	<h1 class="navigation-title">Packages Lock</h1>
	<dl class="about">
		<dt>abbrev-js</dt>
		<dd>Shorthand command-line scripts instead of typing full calls</dd>
		<dt>accepts</dt>
		<dd>Higher level content negotiation based on an HTTP content negotiator</dd>
		<dt>agent-base</dt>
		<dd>Turn a function into an http.Agent instance</dd>
		<dt>ms</dt>
		<dd>Converts various time formats to milliseconds</dd>
		<dt>ansi-regex</dt>
		<dd>Regular expression for matching ANSI escape codes</dd>
		<dt>aproba</dt>
		<dd>Argument validation</dd>
		<dt>archetype</dt>
		<dd>Runtime type-casting library</dd>
		<dt>are-we-there-yet</dt>
		<dd>Tracks complex hierarchies of asynchronous task completion statuses</dd>
		<dt>array-flatten</dt>
		<dd>Flattens nested arrays</dd>
		<dt>balanced-match</dt>
		<dd>Matches balanced pairs like "{" and "}"</dd>
		<dt>base64-js</dt>
		<dd>Fast base encoding/decoding of any given alphabet</dd>
		<dt>bcrypt</dt>
		<dd>Helps hash passwords</dd>
		<dt>body-parser</dt>
		<dd>Node.js parsing middleware</dd>
		<dt>brace-expansion</dt>
		<dd>sh/bash in Javascript</dd>
		<dt>bson</dt>
		<dd>A bson parser for node.js</dd>
		<dt>buffer</dt>
		<dd>Node.js buffer API for browsers</dd>
		<dt>bytes</dt>
		<dd>Utility to parse string bytes to bytes</dd>
		<dt>call-bind</dt>
		<dd>.call.bind() function</dd>
		<dt>chownr</dt>
		<dd>Change the user and/or group of ownership of a given directory</dd>
		<dt>color-support</dt>
		<dd>Determines terminal's level of color support</dd>
		<dt>concat-map</dt>
		<dd>Concatenative mapdashery</dd>
		<dt>connect-mongodb-session</dt>
		<dd>MongoDB session store for Connect and Express</dd>
		<dt>console-control-strings</dt>
		<dd>Library of terminal commands for color and cursor positioning</dd>
		<dt>content-disposition</dt>
		<dd>Create and parse content-disposition header</dd>
		<dt>content-type</dt>
		<dd>Create and parse HTTP content-type header</dd>
		<dt>cookie-signature</dt>
		<dd>Sign and unsign cookies</dd>
		<dt>debug</dt>
		<dd>A debugging utility for Node.js</dd>
		<dt>delegates</dt>
		<dd>Delegate methods and accessors to another property</dd>
		<dt>denque</dt>
		<dd>Double-ended queues</dd>
		<dt>depd</dt>
		<dd>Marks things deprecated</dd>
		<dt>destroy</dt>
		<dd>Destroy a stream if possible</dd>
		<dt>detect-libc</dt>
		<dd>Node.js module to detect details of the C standard library (libc) implementation</dd>
		<dt>dotenv</dt>
		<dd>Loads environment variables from a .env file</dd>
		<dt>ee-first</dt>
		<dd>returns the first event in a set of ee/event pairs</dd>
		<dt>emoji-regex</dt>
		<dd>regular expression to match all emoji symbols and sequences as per the Unicode Standard</dd>
		<dt>encodeurl</dt>
		<dd>Encode a URL to a percent-encoded form, excluding already-encoded sequences</dd>
		<dt>escape-html</dt>
		<dd>Escape string for use in HTML</dd>
		<dt>etag</dt>
		<dd>Create simple HTTP ETags</dd>
		<dt>express</dt>
		<dd>Fast, minimalist web framework</dd>
		<dt>express-favicon</dt>
		<dd>Express favicon middleware</dd>
		<dt>express-formidable</dt>
		<dd>Express middleware of Formidable</dd>
		<dt>express-handlebars</dt>
		<dd>A Handlebars view engine for Express </dd>
		<dt>express-router</dt>
		<dd>Express router</dd>
		<dt>express-session</dt>
		<dd>Simple session middleware for Express</dd>
		<dt>finalhandler</dt>
		<dd>Node.js final http responder</dd>
		<dt>formidable</dt>
		<dd>A node.js module for parsing form data, especially file uploads</dd>
		<dt>forwarded</dt>
		<dd>Parse HTTP X-Forwarded-For header</dd>
		<dt>fresh</dt>
		<dd>HTTP response freshness testing</dd>
		<dt>fs-minipass</dt>
		<dd>fs read and write streams based on minipass</dd>
		<dt>fs.realpath</dt>
		<dd>Use node.js realpath but default to fs.realpath if needed</dd>
		<dt>function-bind</dt>
		<dd>Implementation of Function.prototype.bind</dd>
		<dt>gauge</dt>
		<dd>Terminal based horizontal gauge</dd>
		<dt>get-intrinsic</dt>
		<dd>Get and robustly cache all JS language-level intrinsics at first require time</dd>
		<dt>glob</dt>
		<dd>Match files using the patterns the shell uses</dd>
		<dt>graceful-fs</dt>
		<dd>Replacement for the fs module, making various improvements</dd>
		<dt>handlebars</dt>
		<dd>Logicless templating language that keep the view and the code separated</dd>
		<dt>has</dt>
		<dd>Object.prototype.hasOwnProperty.call shortcut</dd>
		<dt>has-symbols</dt>
		<dd>Determine if the JS environment has Symbol support</dd>
		<dt>has-unicode</dt>
		<dd>Try to guess if your terminal supports unicode</dd>
		<dt>http-errors</dt>
		<dd>Create HTTP error objects</dd>
		<dt>https-proxy-agent</dt>
		<dd>http.Agent implementation that connects to a specified HTTP or HTTPS proxy server</dd>
		<dt>ieee754</dt>
		<dd>Read/write IEEE754 floating point numbers from/to a Buffer or array-like object</dd>
		<dt>inflight</dt>
		<dd>Add callbacks to requests in flight to avoid async duplication</dd>
		<dt>inherits</dt>
		<dd>Browser-friendly inheritance fully compatible with standard node.js inherits</dd>
		<dt>ip</dt>
		<dd>IP address utilities for node.js</dd>
		<dt>ipaddr.js</dt>
		<dd>Library for manipulating IP addresses in JavaScript environments</dd>
		<dt>is-fullwidth-code-point</dd>
		<dt>Check if the character represented by a given Unicode code point is fullwidth</dt>
		<dt>kareem</dt>
		<dd>Additional flexibility in allowing you to execute hooks whenever necessary</dd>
		<dt>lodash.clonedeep</dt>
		<dd>The lodash method `_.cloneDeep` exported as a module</dd>
		<dt>lodash.set</dt>
		<dd>The lodash method `_.set` exported as a module</dd>
		<dt>lru-cache</dt>
		<dd>Cache object that deletes the least recently used terms</dd>
		<dt>make-dir</dt>
		<dd>Make a directory if needed</dd>
		<dt>media-typer</dt>
		<dd>Simple RFC 6838 media type parser</dd>
		<dt>memory-pager</dt>
		<dd>Access memory using small fixed sized buffers instead of allocating a huge buffer</dd>
		<dt>merge-descriptors</dd>
		<dd>Merge objects using descriptors</dd>
		<dt>methods</dt>
		<dd>HTTP methods that node supports</dd>
		<dt>mime</dt>
		<dd>A comprehensive library for mime-type mapping</dd>
		<dt>mime-db</dt>
		<dd>Media Type Database</dd>
		<dt>mime-types</dt>
		<dd>The ultimate javascript content-type utility</dd>
		<dt>minimatch</dt>
		<dd>A glob matcher in javascript</dd>
		<dt>minimist</dt>
		<dd>Parse argument options</dd>
		<dt>minipass</dt>
		<dd>Minimal implementation of a PassThrough stream</dd>
		<dt>minizlib</dt>
		<dd>A small fast zlib stream built on [minipass](http://npm.im/minipass) and Node.js's zlib binding</dd>
		<dt>mkdirp</dt>
		<dd>Recursively mkdir</dd>
		<dt>mongodb</dt>
		<dd>The official MongoDB driver for Node.js</dd>
		<dt>mongodb-connection-string-url</dt>
		<dd>MongoDB connection strings, based on the WhatWG URL API</dd>
		<dt>mongoose</dt>
		<dd>Mongoose is a MongoDB object modeling tool designed to work in an asynchronous environment</dd>
		<dt>mquery</dt>
		<dd>Expressive query building for MongoDB</dd>
		<dt>neo-async</dt>
		<dd>Neo-Async is thought to be used as a drop-in replacement for Async</dd>
		<dt>node-addon-api</dt>
		<dd>Node.js API </dd>
		<dt>node-fetch</dt>
		<dd>A light-weight module that brings Fetch API to node.js</dd>
		<dt>node-pre-gyp</dt>
		<dd>Makes it easy to publish and install Node.js C++ addons from binaries</dd>
		<dt>Node.js type definitions</dt>
		<dd>Contains type definitions for Node.js</dd>
		<dt>nopt</dt>
		<dd>Option parsing for Node, supporting types, shorthands, etc.</dd>
		<dt>npmlog</dt>
		<dd>npm logger</dd>
		<dt>object-assign</dt>
		<dd>ES2015 `Object.assign()` ponyfill</dd>
		<dt>object-inspect</dt>
		<dd>String representations of objects in node and the browser</dd>
		<dt>on-finished</dt>
		<dd>Execute a callback when a request closes, finishes, or errors</dd>
		<dt>on-headers</dt>
		<dd>Execute a listener when a response is about to write headers</dd>
		<dt>once</dt>
		<dd>Run a function exactly one time</dd>
		<dt>parseurl</dt>
		<dd>Parse a url with memoization</dd>
		<dt>path-is-absolute</dt>
		<dd>Returns true if a file path is absolute</dd>
		<dt>path-to-regexp</dt>
		<dd>Express style path to RegExp utility</dd>
		<dt>proxy-addr</dt>
		<dd>Determine address of proxied request</dd>
		<dt>punycode</dt>
		<dd>Robust Punycode converter that fully complies to RFC 3492 and RFC 5891</dd>
		<dt>qs</dt>
		<dd>A querystring parsing and stringifying library with some added security</dd>
		<dt>random-bytes</dt>
		<dd>URL and cookie safe UIDs</dd>
		<dt>range-parser</dt>
		<dd>Range header field string parser</dd>
		<dt>raw-body</dt>
		<dd>Get and validate the raw body of a readable stream</dd>
		<dt>readable-stream</dt>
		<dd>Stream library of Node.js</dd>
		<dt>rimraf</dt>
		<dd>The UNIX command rm -rf for node</dd>
		<dt>safe-buffer</dt>
		<dd>Use the new Node.js Buffer APIs in all versions of Node.js</dd>
		<dt>safer-buffer</dt>
		<dd>Modern Buffer API polyfill without footguns, working on Node.js from 0.8 to current</dd>
		<dt>saslprep</dt>
		<dd>Stringprep Profile for User Names and Passwords, rfc4013</dd>
		<dt>semver</dt>
		<dd>Semantic version parser used by npm</dd>
		<dt>send</dt>
		<dd>Library for streaming files from the file system as a http response</dd>
		<dt>serve-static</dt>
		<dd>Serve static files</dd>
		<dt>set-blocking</dt>
		<dd>set blocking stdio and stderr ensuring that terminal output does not truncate</dd>
		<dt>setprototypeof</dt>
		<dd>A small polyfill for Object.setprototypeof</dd>
		<dt>side-channel</dt>
		<dd>Store information about any JS value in a side channel</dd>
		<dt>sift</dt>
		<dd>MongoDB query filtering in Javascript</dd>
		<dt>signal-exit</dt>
		<dd>When you want to fire an event no matter how a process exits</dd>
		<dt>smart-buffer</dt>
		<dd>Wrapper that adds automatic read & write offset tracking, string operations, data insertions</dd>
		<dt>socks</dt>
		<dd>Fully featured SOCKS proxy client supporting SOCKSv4, SOCKSv4a, and SOCKSv5</dd>
		<dt>source-map</dt>
		<dd>Generates and consumes source maps</dd>
		<dt>sparse-bitfield</dt>
		<dd>Bitfield that allocates a series of small buffers to support sparse bits without allocating a massive buffer</dd>
		<dt>statuses</dt>
		<dd>HTTP status utility</dd>
		<dt>string-decoder</dt>
		<dd>The string_decoder module from Node core</dd>
		<dt>string-width</dt>
		<dd>Get the visual width of a string - the number of columns required to display it</dd>
		<dt>strip-ansi</dt>
		<dd>Strip ANSI escape codes from a string</dd>
		<dt>tar</dt>
		<dd>Tar for node</dd>
		<dt>toidentifier</dt>
		<dd>Convert a string of words to a JavaScript identifier</dd>
		<dt>tr46</dt>
		<dd>An implementation of the Unicode UTS #46: Unicode IDNA Compatibility Processing</dd>
		<dt>type-is</dt>
		<dd>Infer the content-type of a request</dd>
		<dt>uglify-js</dt>
		<dd>JavaScript parser, minifier, compressor and beautifier toolkit</dd>
		<dt>uid-safe</dt>
		<dd>URL and cookie safe UIDs</dd>
		<dt>unpipe</dt>
		<dd>Unpipe a stream from all destinations</dd>
		<dt>util-deprecate</dt>
		<dd>The Node.js `util.deprecate()` function with browser support</dd>
		<dt>utils-merge</dt>
		<dd>Merge() utility function</dd>
		<dt>vary</dt>
		<dd>Manipulate the HTTP vary header</dd>
		<dt>webidl-conversions</dt>
		<dd>Converts JavaScript values to an according Web IDL type</dd>
		<dt>whatwg-url</dt>
		<dd>Implementation of the WHATWG URL standard</dd>
		<dt>wide-align</dt>
		<dd>A wide-character aware text alignment function for use on the console or with fixed width fonts</dd>
		<dt>wordwrap</dt>
		<dd>Show words at what columns to start and stop</dd>
		<dt>wrappy</dt>
		<dd>Callback wrapping utility</dd>
		<dt>yallist</dt>
		<dd>Yet Another Linked List</dd>
	</dl>
</body>
</html>